syntax = "proto3";

package media;

// I don't care that media is already a latin plural, Oxford dictionnary has accepted the new "medias" plural form 
service LoaderService {
  // Medias
  rpc GetAllMedias (EmptyRequest) returns (stream MediaResponse) {}
  rpc GetMediaById (GetMediaByIdRequest) returns (MediaResponse) {}
	rpc GetMediaIdFromURI (GetMediaIdFromURIRequest) returns (GetMediaIdFromURIResponse) {}
  rpc AddMedia (stream AddMediaRequest) returns (stream AddMediaResponse) {}
  rpc DeleteMedia (DeleteMediaRequest) returns (StatusResponse) {}

	// TagSets
	rpc getTagSets(EmptyRequest) returns (stream GetTagSetResponse) {};
	rpc getTagSetById(GetTagSetRequestById) returns (GetTagSetResponse) {};
	rpc getTagSetByName(GetTagSetRequestByName) returns (GetTagSetResponse) {};
	rpc createTagSet(CreateTagSetRequest) returns (CreateTagSetResponse) {};

	// Tags
	rpc getTags(EmptyRequest) returns (stream GetTagResponse) {};
	rpc getTag(GetTagRequest) returns (GetTagResponse) {};
	rpc createOrGetTag(CreateTagRequest) returns (CreateTagResponse) {};

	// Tagging
	rpc getTaggings(EmptyRequest) returns (stream GetTaggingResponse) {};
	rpc getTagging(GetTaggingRequest) returns (GetTaggingResponse) {};
	rpc createTagging(CreateTaggingRequest) returns (CreateTaggingResponse) {};

	rpc ResetDatabase (EmptyRequest) returns (StatusResponse) {}
}

// Misc
message EmptyRequest {}

message StatusResponse {
	bool success = 1;
}

// Media / cubeobjects

message Media {
	int32 id = 1;
	string file_uri = 2;
	int32 file_type = 3;
	string thumbnail_uri = 4;
}

message MediaResponse {
	bool success = 1;
	Media media = 2;
}
message GetMediaByIdRequest {
	int32 id = 1;
}

message GetMediaIdFromURIRequest {
	string uri = 1;
}

message GetMediaIdFromURIResponse {
	bool success = 1;
	int32 id = 2;
}

message AddMediaRequest {
	Media media = 1;
}

message AddMediaResponse {
	bool success = 1;
	int32 count = 2;
}

message DeleteMediaRequest {
	int32 id = 1;
}

// TagSets

message TagSet {
  int32 id = 1;
  string name = 2;
}

message GetTagSetRequestById {
  int32 id = 1;
}

message GetTagSetRequestByName {
  string name = 1;
}

message GetTagSetResponse {
  TagSet tagset = 1;
}

message CreateTagSetRequest {
  string name = 1;
}

message CreateTagSetResponse {
  TagSet tagset = 1;
}

// Tags

enum TagType {
  TYPE_UNKNOWN = 0;
  ALPHANUMERICAL = 1;
  TIMESTAMP = 2;
  TIME = 3;
  DATE = 4;
  NUMERICAL = 5;
}

message AlphanumericalValue {
  string value = 1;
}

message NumericalValue {
  int64 value = 1;
}

message DateValue {
  string value = 1;
}

message TimeValue {
  string value = 1;
}

message TimeStampValue {
  string value = 1;
}

message Tag {
	int64 id = 1;
	int32 tagSetId = 2;
	TagType tagTypeId = 3;
	oneof value {
    AlphanumericalValue alphanumerical = 4;
    TimeStampValue timestamp = 5;
    TimeValue date = 6;
    DateValue time = 7;
    NumericalValue numerical = 8;
  }
}

message GetTagRequest {
	int64 id = 1;
}

message GetTagResponse {
	Tag tag = 1;
}

message CreateTagRequest {
  int32 tagSetId = 2;
	TagType tagTypeId = 3;
	oneof value {
    AlphanumericalValue alphanumerical = 4;
    TimeStampValue timestamp = 5;
    TimeValue date = 6;
    DateValue time = 7;
    NumericalValue numerical = 8;
  }
}

message CreateTagResponse {
  Tag tag = 1;
}

// Tagging (mapped in table objecttagrelations)
// Tagging

message Tagging {
  int64 tagId = 1;
  int64 mediaId = 2;
}

message GetTaggingsRequest {
  int64 tagId = 1;
}

message GetTaggingRequest {
  int64 tagId = 1;
  int64 mediaId = 2;  
}

message GetTaggingResponse {
  Tagging tagging = 1;
}

message CreateTaggingRequest {
  int64 tagId = 1;
  int64 mediaId = 2;
}

message CreateTaggingResponse {
  Tagging tagging = 1;
}